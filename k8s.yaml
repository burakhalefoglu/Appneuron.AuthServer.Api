
apiVersion: v1
kind: Service
metadata:
  name: auth-server-service
  namespace: development
spec:
  type: ClusterIP
  ports:
    - port: 8000
      targetPort: 8000
  selector:
    app: auth-server
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-server 
  namespace: development
spec:
  replicas: 7
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 2
      maxSurge: 2
  selector:
    matchLabels:
      app: auth-server 
  template:
    metadata:
      labels:
        app: auth-server 
    spec:
      nodeSelector:
        dedicated: deamond
      containers:
        - name: auth-server 
          image: CONTAINER_IMAGE
          imagePullPolicy: Always
          env:
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: redis-host
            - name: REDIS_PASS
              valueFrom:
                secretKeyRef:
                  name: app-secret
                  key: redis-password
            - name: KAFKA_HOST
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: kafka-host
            - name: LOGSTASH_HOST
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: logstash-host
          ports:
            - name: http-port
              containerPort: 8000
              hostPort: 8000
          livenessProbe:
            httpGet:
              path: /api/HealthChecks
              port: 8000
              httpHeaders:
              - name: Custom-Header
                value: Awesome
            initialDelaySeconds: 60
            periodSeconds: 5
          securityContext:
            privileged: false
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false

---

apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: webapi-auth-ingress
  namespace: development
spec:
  tls:
    - hosts:
        - webapi.appneuron.net
      secretName: webapi-tls
  rules:
    - host: webapi.appneuron.net
      http:
        paths:
          - path: /auth/
            pathType: Prefix
            backend: 
              serviceName: auth-server-service
              servicePort: 8000



